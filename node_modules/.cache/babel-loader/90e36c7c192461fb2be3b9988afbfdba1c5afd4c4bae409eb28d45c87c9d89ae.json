{"ast":null,"code":"// Time formatting utilities\nexport const formatTime = minutes => {\n  if (typeof minutes !== 'number' || minutes < 0) {\n    return '0시간 0분';\n  }\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  return `${hours}시간 ${mins}분`;\n};\n\n// Date formatting utilities\nexport const formatMonthYear = date => {\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return '2024.01';\n  }\n  return `${date.getFullYear()}.${String(date.getMonth() + 1).padStart(2, '0')}`;\n};\n\n// Get current time in Seoul timezone\nexport const getSeoulTime = () => {\n  try {\n    return new Date(new Date().toLocaleString(\"en-US\", {\n      timeZone: \"Asia/Seoul\"\n    }));\n  } catch (error) {\n    console.warn('Failed to get Seoul time:', error);\n    return new Date();\n  }\n};\n\n// Calendar data generation\nexport const getCalendarData = currentDate => {\n  if (!(currentDate instanceof Date) || isNaN(currentDate.getTime())) {\n    return [];\n  }\n  try {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    // eslint-disable-next-line no-unused-vars\n    const lastDay = new Date(year, month + 1, 0);\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    const calendarDays = [];\n    for (let i = 0; i < 42; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      calendarDays.push(date.getDate());\n    }\n    return calendarDays;\n  } catch (error) {\n    console.warn('Failed to generate calendar data:', error);\n    return [];\n  }\n};\n\n// Data validation utilities\nexport const validateGraphData = data => {\n  if (!Array.isArray(data)) return false;\n  return data.every(item => item && typeof item.month === 'string' && typeof item.value === 'number' && item.value >= 0 && item.value <= 100 && typeof item.date === 'string');\n};\nexport const validateBarData = data => {\n  if (!Array.isArray(data)) return false;\n  return data.every(item => item && typeof item.label === 'string' && typeof item.value === 'number' && item.value >= 0 && item.value <= 100);\n};\n\n// Random number generation with bounds\nexport const getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Safe number formatting\nexport const formatNumber = num => {\n  if (typeof num !== 'number' || isNaN(num)) return '0';\n  return num.toLocaleString();\n};\n\n// Animation easing functions\nexport const easeInOut = t => {\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n};\n\n// Debounce function for performance\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};","map":{"version":3,"names":["formatTime","minutes","hours","Math","floor","mins","formatMonthYear","date","Date","isNaN","getTime","getFullYear","String","getMonth","padStart","getSeoulTime","toLocaleString","timeZone","error","console","warn","getCalendarData","currentDate","year","month","firstDay","lastDay","startDate","setDate","getDate","getDay","calendarDays","i","push","validateGraphData","data","Array","isArray","every","item","value","validateBarData","label","getRandomInRange","min","max","random","formatNumber","num","easeInOut","t","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout"],"sources":["/Users/seungminpark/Projects/nursing-web-project/src/utils.js"],"sourcesContent":["// Time formatting utilities\nexport const formatTime = (minutes) => {\n  if (typeof minutes !== 'number' || minutes < 0) {\n    return '0시간 0분';\n  }\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  return `${hours}시간 ${mins}분`;\n};\n\n// Date formatting utilities\nexport const formatMonthYear = (date) => {\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return '2024.01';\n  }\n  return `${date.getFullYear()}.${String(date.getMonth() + 1).padStart(2, '0')}`;\n};\n\n// Get current time in Seoul timezone\nexport const getSeoulTime = () => {\n  try {\n    return new Date(new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Seoul\"}));\n  } catch (error) {\n    console.warn('Failed to get Seoul time:', error);\n    return new Date();\n  }\n};\n\n// Calendar data generation\nexport const getCalendarData = (currentDate) => {\n  if (!(currentDate instanceof Date) || isNaN(currentDate.getTime())) {\n    return [];\n  }\n  \n  try {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    // eslint-disable-next-line no-unused-vars\n    const lastDay = new Date(year, month + 1, 0);\n    const startDate = new Date(firstDay);\n    startDate.setDate(startDate.getDate() - firstDay.getDay());\n    \n    const calendarDays = [];\n    for (let i = 0; i < 42; i++) {\n      const date = new Date(startDate);\n      date.setDate(startDate.getDate() + i);\n      calendarDays.push(date.getDate());\n    }\n    \n    return calendarDays;\n  } catch (error) {\n    console.warn('Failed to generate calendar data:', error);\n    return [];\n  }\n};\n\n// Data validation utilities\nexport const validateGraphData = (data) => {\n  if (!Array.isArray(data)) return false;\n  return data.every(item => \n    item && \n    typeof item.month === 'string' && \n    typeof item.value === 'number' && \n    item.value >= 0 && item.value <= 100 &&\n    typeof item.date === 'string'\n  );\n};\n\nexport const validateBarData = (data) => {\n  if (!Array.isArray(data)) return false;\n  return data.every(item => \n    item && \n    typeof item.label === 'string' && \n    typeof item.value === 'number' && \n    item.value >= 0 && item.value <= 100\n  );\n};\n\n// Random number generation with bounds\nexport const getRandomInRange = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// Safe number formatting\nexport const formatNumber = (num) => {\n  if (typeof num !== 'number' || isNaN(num)) return '0';\n  return num.toLocaleString();\n};\n\n// Animation easing functions\nexport const easeInOut = (t) => {\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n};\n\n// Debounce function for performance\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}